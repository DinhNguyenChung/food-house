spring.application.name=server
# ==== Datasource PostgreSQL ====
spring.datasource.url=jdbc:postgresql://localhost:5432/snackbar
spring.datasource.username=postgres
spring.datasource.password=secret

# ==== JPA / Hibernate ====
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ==== Redis (Spring Data Redis 3.x) ====
spring.redis.connection.host=localhost
spring.redis.connection.port=6379
# N?u Redis có password:
# spring.redis.connection.password=your_redis_password
# N?u có nhi?u node ho?c cluster:
# spring.redis.cluster.nodes=localhost:6379,localhost:6380

# ==== Kafka ====
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=snackshop-group
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# ?? t? ??ng map JSON vào class OrderEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=vn.edu.iuh.fit.server.events

# ==== Table statuses (n?u c?n ??c t? properties) ====
table.statuses=AVAILABLE,RESERVED,OCCUPIED

# ==== WebSocket STOMP ====
# (m?c ??nh Spring Boot s? dùng ???ng d?n /ws và /app, /topic nh? c?u hình Java)

# ==== Spring Security ====
# (n?u mu?n custom thêm có th? ??t ? ?ây)
JWT_SECRET_KEY=NGxkb3pnOHR1c3U4NThrbWVmemYyMGQ4ZnI1NHRucmpoMWtiOHVycWtubnlzMWt5ajA5cDczMTFnZ2VmaW9uNjU2bTlkdzYxcXZiNzdhaDhoc2dhNmI0dDc4MnFmY3poOWc4d2dkejJyM3Z2MWNleTVreGg3NHF5OXUxYWRoOXQ=
JWT_EXPIRATION_MS=86400000